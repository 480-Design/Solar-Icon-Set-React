import * as React from 'react'; import { IconProps } from '../../types'; import { IconWrapper } from '../IconWrapper'; const Tuning = (allProps: IconProps) => { const { svgProps: props, iconStyle, ...restProps } = allProps; const styles: { [style: string]: React.ReactNode } = { Broken: <svg width="inherit" height="inherit" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}><path d="M14 14.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM4 9.5a3 3 0 1 0 6 0 3 3 0 0 0-6 0Z" stroke="currentColor" strokeWidth={1.5} /><path d="M7 13v5m0 3v1M17 11V6m0-3V2M17 22v-4M7 2v4" stroke="currentColor" strokeWidth={1.5} strokeLinecap="round" /></svg>, LineDuotone: <svg width="inherit" height="inherit" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}><path d="M10 9.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM20 14.5a3 3 0 1 0-6 0 3 3 0 0 0 6 0Z" stroke="currentColor" strokeWidth={1.5} /><path opacity={0.5} d="m17 11 .041-9M7 2v4M7 13v9m10 0v-4" stroke="currentColor" strokeWidth={1.5} strokeLinecap="round" /></svg>, Linear: <svg width="inherit" height="inherit" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}><path d="M14 14.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM4 9.5a3 3 0 1 0 6 0 3 3 0 0 0-6 0Z" stroke="currentColor" strokeWidth={1.5} /><path d="M16.959 9V2M6.958 15v7M16.959 22v-2M6.958 2v2" stroke="currentColor" strokeWidth={1.5} strokeLinecap="round" /></svg>, Outline: <svg width="inherit" height="inherit" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}><path d="M16.959 9.75a.75.75 0 0 1-.75-.75V2a.75.75 0 0 1 1.5 0v7a.75.75 0 0 1-.75.75Z" fill="currentColor" /><path fillRule="evenodd" clipRule="evenodd" d="M7 5.75a3.75 3.75 0 1 1 0 7.5 3.75 3.75 0 0 1 0-7.5ZM9.25 9.5a2.25 2.25 0 1 0-4.5 0 2.25 2.25 0 0 0 4.5 0ZM17 18.25a3.75 3.75 0 1 0 0-7.5 3.75 3.75 0 0 0 0 7.5Zm2.25-3.75a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z" fill="currentColor" /><path d="M6.209 15a.75.75 0 0 1 1.5 0v7a.75.75 0 0 1-1.5 0v-7ZM16.959 22.75a.75.75 0 0 1-.75-.75v-2a.75.75 0 0 1 1.5 0v2a.75.75 0 0 1-.75.75ZM6.209 2a.75.75 0 0 1 1.5 0v2a.75.75 0 0 1-1.5 0V2Z" fill="currentColor" /></svg>, Bold: <svg width="inherit" height="inherit" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}><path d="M16.959 9.75a.75.75 0 0 1-.75-.75V2a.75.75 0 0 1 1.5 0v7a.75.75 0 0 1-.75.75ZM7 12.5a3 3 0 1 1 0-6 3 3 0 0 1 0 6ZM17 11.5a3 3 0 1 0 0 6 3 3 0 0 0 0-6ZM6.209 15a.75.75 0 0 1 1.5 0v7a.75.75 0 0 1-1.5 0v-7ZM16.959 22.75a.75.75 0 0 1-.75-.75v-2a.75.75 0 0 1 1.5 0v2a.75.75 0 0 1-.75.75ZM6.209 2a.75.75 0 0 1 1.5 0v2a.75.75 0 0 1-1.5 0V2Z" fill="currentColor" /></svg>, BoldDuotone: <svg width="inherit" height="inherit" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}><path d="M13.752 14.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM3.752 9.5a3 3 0 1 0 6 0 3 3 0 0 0-6 0Z" fill="currentColor" /><g opacity={0.5} fill="currentColor"><path d="M7.462 6.584a3.007 3.007 0 0 0-1.5.021V2a.75.75 0 0 1 1.5 0v4.584ZM5.962 12.394a3.003 3.003 0 0 0 1.5.021V22a.75.75 0 0 1-1.5 0v-9.606ZM15.962 17.394V22a.75.75 0 0 0 1.5 0v-4.585a3.008 3.008 0 0 1-1.5-.021ZM17.462 11.584V2a.75.75 0 0 0-1.5 0v9.605a3.003 3.003 0 0 1 1.5-.021Z" /></g></svg> }; return <IconWrapper icon={styles[iconStyle || 'Linear']} {...restProps} /> }; export default Tuning